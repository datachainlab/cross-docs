"use strict";(self.webpackChunkcross_docs=self.webpackChunkcross_docs||[]).push([[53],{1109:function(t){t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Docs","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Introduction","href":"/cross-docs/","docId":"docs/intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Install","href":"/cross-docs/docs/getting-started/install","docId":"docs/getting-started/install"}]},{"type":"category","label":"Architecture","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Overview","href":"/cross-docs/docs/architecture/overview","docId":"docs/architecture/overview"},{"type":"link","label":"Smart Contract","href":"/cross-docs/docs/architecture/smart-contract","docId":"docs/architecture/smart-contract"},{"type":"link","label":"Cross-chain Transaction","href":"/cross-docs/docs/architecture/cross-chain-transaction","docId":"docs/architecture/cross-chain-transaction"},{"type":"link","label":"Atomic commit protocol","href":"/cross-docs/docs/architecture/atomic-commit-protocol","docId":"docs/architecture/atomic-commit-protocol"},{"type":"link","label":"State store","href":"/cross-docs/docs/architecture/state-store","docId":"docs/architecture/state-store"}]}]},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Overview","href":"/cross-docs/tutorial/overview","docId":"tutorial/overview"},{"type":"link","label":"Getting Started","href":"/cross-docs/tutorial/getting-started","docId":"tutorial/getting-started"},{"type":"link","label":"Create contract modules","href":"/cross-docs/tutorial/create-contract-module","docId":"tutorial/create-contract-module"},{"type":"link","label":"Create Blockchain Applications","href":"/cross-docs/tutorial/create-blockchain-app","docId":"tutorial/create-blockchain-app"},{"type":"link","label":"Create Command CLI","href":"/cross-docs/tutorial/create-command-cli","docId":"tutorial/create-command-cli"},{"type":"link","label":"Execution","href":"/cross-docs/tutorial/execution","docId":"tutorial/execution"}]}]},"docs":{"docs/architecture/atomic-commit-protocol":{"id":"docs/architecture/atomic-commit-protocol","title":"Atomic commit protocol","description":"Atomic commit protocol is a protocol that allows a set of multiple operations to be executed as a single operation. Typical examples include Two-phase commit and Three-phase commit. In our context, it refers to a protocol that allows multiple blockchain transactions to be executed as a single transaction.","sidebar":"tutorialSidebar"},"docs/architecture/cross-chain-transaction":{"id":"docs/architecture/cross-chain-transaction","title":"Cross-chain Transaction","description":"Cross-chain Transaction is a distributed transaction executed between chains connected by IBC channel.","sidebar":"tutorialSidebar"},"docs/architecture/overview":{"id":"docs/architecture/overview","title":"Overview","description":"Cross Framework is composed of the following components:","sidebar":"tutorialSidebar"},"docs/architecture/smart-contract":{"id":"docs/architecture/smart-contract","title":"Smart Contract","description":"Smart contract is a program that can be executed on Blockchain. They have a state, and the functions they provide are exposed as functions that can be executed according to defined conditions. It can also be executed by a transaction is created by a user.","sidebar":"tutorialSidebar"},"docs/architecture/state-store":{"id":"docs/architecture/state-store","title":"State store","description":"State store is an abstract KVS, or key-value store, class that persists the state of smart contracts on each chain. It supports the following elements:","sidebar":"tutorialSidebar"},"docs/getting-started/install":{"id":"docs/getting-started/install","title":"Install","description":"NOTE This document is WIP","sidebar":"tutorialSidebar"},"docs/intro":{"id":"docs/intro","title":"Introduction","description":"Cross Framework enables the development of cross-chain smart contracts that reference data and perform functions distributed across multiple Blockchains.","sidebar":"tutorialSidebar"},"tutorial/create-blockchain-app":{"id":"tutorial/create-blockchain-app","title":"Create Blockchain Applications","description":"This part explains how to develop Blockchain Application with Cross Framework.","sidebar":"tutorialSidebar"},"tutorial/create-command-cli":{"id":"tutorial/create-command-cli","title":"Create Command CLI","description":"This part explains how to develop CLI to run Cross-chain transactions in atomic.","sidebar":"tutorialSidebar"},"tutorial/create-contract-module":{"id":"tutorial/create-contract-module","title":"Create contract modules","description":"This part explains how to develop Contract Module.","sidebar":"tutorialSidebar"},"tutorial/execution":{"id":"tutorial/execution","title":"Execution","description":"This part explains how to set up a Cross-chain environment between Tendermint and Hyperledger Fabric in fabric-tendermint-cross-demo.","sidebar":"tutorialSidebar"},"tutorial/getting-started":{"id":"tutorial/getting-started","title":"Getting Started","description":"Access to fabric-tendermint-cross-demo and read README.md first.","sidebar":"tutorialSidebar"},"tutorial/overview":{"id":"tutorial/overview","title":"Overview","description":"This tutorial explains how to develop a Cross-chain application enabling atomic swap between Hyperledgr Fabric and Tendermint based blockchain through a demo application using Cross Framework, fabric-tendermint-cross-demo.","sidebar":"tutorialSidebar"}}}')}}]);